volumes:
    prometheus_data: {}
    grafana_data: {}
networks:
  front-tier:
  back-tier:
services:
  prometheus:
    image: prom/prometheus:v2.36.2
    volumes:
      - ./prometheus/:/etc/prometheus/
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - 9090:9090
    links:
      - cadvisor:cadvisor
      - alertmanager:alertmanager
    depends_on:
      - cadvisor
    networks:
      - back-tier
    restart: always

  node-exporter:
    image: quay.io/prometheus/node-exporter:latest
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
      - /:/host:ro
    command: 
      - '--path.rootfs=/host'
      - '--path.procfs=/host/proc' 
      - '--path.sysfs=/host/sys'
      - --collector.filesystem.ignored-mount-points
      - "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"
    ports:
      - 9100:9100
    networks:
      - back-tier
    restart: always
    deploy:
      mode: global

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.49.1
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    ports:
      - 8080:8080
    networks:
      - back-tier
    restart: always
    deploy:
      mode: global

  grafana:
    image: grafana/grafana
    user: "472"
    depends_on:
      - prometheus
    ports:
      - 3000:3000
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning/:/etc/grafana/provisioning/
    env_file:
      - ./grafana/config.monitoring
    networks:
      - back-tier
      - front-tier
    restart: always

  alertmanager:
    image: prom/alertmanager
    ports:
      - 9093:9093
    networks:
      - back-tier
    volumes:
      - ./alertmanager/:/etc/alertmanager/
    restart: always
    command:
      - '--config.file=/etc/alertmanager/config.yml'
      - '--storage.path=/alertmanager'

  keycloak:
    # build: .
    image: quay.io/keycloak/keycloak
    ports:
      - 9091:8080
    networks:
      - front-tier
    environment:
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
    command:
      - start-dev

  api-gateway:
    container_name: api-gateway
    build:
      context: api-gateway
      dockerfile: Dockerfile
    image: api-gateway:latest
    ports:
      - 8090:8090
    networks:
      - front-tier
  
  discovery-server:
    container_name: discovery-server
    build:
      context: discovery-server
      dockerfile: Dockerfile
    image: discovery-server:latest
    ports:
      - 8761:8761
    networks:
      - front-tier

  crud-service:
    container_name: crud-service
    build:
      context: Metaphorce
      dockerfile: Dockerfile
    image: crud-service:latest
    ports:
      - 8082:8082
    networks:
      - front-tier
    depends_on:
      - discovery-server
      - keycloak
      - db
    restart: always

  db:
    image: postgres
    restart: always
    shm_size: 128mb
    environment:
      POSTGRES_PASSWORD: postgres
    ports:
      - 5432:5432
    networks:
      - front-tier

  adminer:
    image: adminer
    restart: always
    networks:
      - front-tier
    ports:
      - 8083:8080